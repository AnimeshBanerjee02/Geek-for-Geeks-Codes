#User function Template for python3
class Solution:
    def productExceptSelf(self, nums, n):
        # Edge case: if the array has only one element
        if n == 1:
            return [1]
        
        # Initialize the prefix and suffix product arrays
        prefix_products = [1] * n
        suffix_products = [1] * n
        result = [1] * n
        
        # Calculate prefix products
        prefix_products[0] = nums[0]
        for i in range(1, n):
            prefix_products[i] = prefix_products[i-1] * nums[i]
        
        # Calculate suffix products
        suffix_products[n-1] = nums[n-1]
        for i in range(n-2, -1, -1):
            suffix_products[i] = suffix_products[i+1] * nums[i]
        
        # Calculate the result using prefix and suffix products
        result[0] = suffix_products[1]
        result[n-1] = prefix_products[n-2]
        for i in range(1, n-1):
            result[i] = prefix_products[i-1] * suffix_products[i+1]
        
        return result
