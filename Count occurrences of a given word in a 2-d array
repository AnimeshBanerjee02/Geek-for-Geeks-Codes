#User function Template for python3
import sys

# Set recursion limit to a high number to avoid recursion depth errors
sys.setrecursionlimit(10**9)

class Solution:
    def __init__(self):
        self.count = 0
    
    def helper(self, mat, i, j, k, target, stack):
        if k == len(target):
            self.count += 1
            return 
        
        stack.add((i, j)) 
        r, c = len(mat), len(mat[0])
        
        if i-1 >= 0 and mat[i-1][j] == target[k] and (i-1, j) not in stack:
            self.helper(mat, i-1, j, k+1, target, stack)
            
        if j-1 >= 0 and mat[i][j-1] == target[k] and (i, j-1) not in stack:
            self.helper(mat, i, j-1, k+1, target, stack)
            
        if i+1 < r and mat[i+1][j] == target[k] and (i+1, j) not in stack:
            self.helper(mat, i+1, j, k+1, target, stack)
            
        if j+1 < c and mat[i][j+1] == target[k] and (i, j+1) not in stack:
            self.helper(mat, i, j+1, k+1, target, stack)
            
        stack.remove((i, j))
            
    def findOccurrence(self, mat, target):
        r, c = len(mat), len(mat[0])
        stack = set()
        for i in range(r):
            for j in range(c):
                if mat[i][j] == target[0]:
                    self.helper(mat, i, j, 1, target, stack)
        
        return self.count
