class Solution:
    def maxArea(self, M, n, m):
        def largestRectangleArea(heights):
            stack = []
            max_area = 0
            index = 0
            while index < len(heights):
                if not stack or heights[index] >= heights[stack[-1]]:
                    stack.append(index)
                    index += 1
                else:
                    top_of_stack = stack.pop()
                    area = heights[top_of_stack] * ((index - stack[-1] - 1) if stack else index)
                    max_area = max(max_area, area)
            while stack:
                top_of_stack = stack.pop()
                area = heights[top_of_stack] * ((index - stack[-1] - 1) if stack else index)
                max_area = max(max_area, area)
            return max_area
        
        max_area = 0
        heights = [0] * m
        for i in range(n):
            for j in range(m):
                if M[i][j] == 1:
                    heights[j] += 1
                else:
                    heights[j] = 0
            max_area = max(max_area, largestRectangleArea(heights))
        return max_area
