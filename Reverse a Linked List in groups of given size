/*
  Reverse a linked list
  The input list will have at least one element  
  Return the node which points to the head of the new LinkedList
  Node is defined as 
    struct node
    {
        int data;
        struct node* next;
    
        node(int x){
            data = x;
            next = NULL;
        }
    
    }*head;
*/

class Solution {
public:
    struct node *reverseIt(struct node *head, int k) { 
        if (!head) return NULL;

        node* current = head;
        node* next = NULL;
        node* prev = NULL;
        int count = 0;

        while (current != NULL && count < k) {
            next = current->next;  
            current->next = prev;  
            prev = current;       
            current = next;
            count++;
        }

        if (next != NULL) {
            head->next = reverseIt(next, k);
        }

        return prev;
    }
};

void printLinkedList(node* head) {
    while (head != NULL) {
        std::cout << head->data << " ";
        head = head->next;
    }
    std::cout << std::endl;
}
