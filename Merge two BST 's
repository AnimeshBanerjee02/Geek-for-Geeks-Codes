class Solution {
public:
    vector<int> merge(Node *root1, Node *root2) {
        vector<int> result;
        stack<Node*> stack1, stack2;
        Node* curr1 = root1;
        Node* curr2 = root2;
        
        while (curr1 || !stack1.empty() || curr2 || !stack2.empty()) {
            while (curr1) {
                stack1.push(curr1);
                curr1 = curr1->left;
            }
            while (curr2) {
                stack2.push(curr2);
                curr2 = curr2->left;
            }
            
            if (stack2.empty() || (!stack1.empty() && stack1.top()->data <= stack2.top()->data)) {
                curr1 = stack1.top();
                stack1.pop();
                result.push_back(curr1->data);
                curr1 = curr1->right;
            } else {
                curr2 = stack2.top();
                stack2.pop();
                result.push_back(curr2->data);
                curr2 = curr2->right;
            }
        }
        
        return result;
    }
};
