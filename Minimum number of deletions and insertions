#User function Template for python3
class Solution:
    def minOperations(self, str1, str2):
        # Function to find the length of Longest Common Subsequence (LCS)
        def lcs(X, Y, m, n):
            dp = [[0] * (n + 1) for i in range(m + 1)]
            
            for i in range(m + 1):
                for j in range(n + 1):
                    if i == 0 or j == 0:
                        dp[i][j] = 0
                    elif X[i-1] == Y[j-1]:
                        dp[i][j] = dp[i-1][j-1] + 1
                    else:
                        dp[i][j] = max(dp[i-1][j], dp[i][j-1])
                        
            return dp[m][n]
        
        m = len(str1)
        n = len(str2)
        
        lcs_length = lcs(str1, str2, m, n)
        
        deletions = m - lcs_length
        insertions = n - lcs_length
        
        return deletions + insertions
