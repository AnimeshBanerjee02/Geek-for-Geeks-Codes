class Solution:
    
    def maxOfMin(self, arr, n):
        result = []
        stack = []
        
        left = [0] * (n + 1)
        right = [0] * (n + 1)
        
        for i in range(n):
            left[i] = -1
            right[i] = n
        
        for i in range(n):
            while stack and arr[stack[-1]] >= arr[i]:
                stack.pop()
            if stack:
                left[i] = stack[-1]
            stack.append(i)
        
        stack.clear()
        
        for i in range(n - 1, -1, -1):
            while stack and arr[stack[-1]] >= arr[i]:
                stack.pop()
            if stack:
                right[i] = stack[-1]
            stack.append(i)
        
        for i in range(n + 1):
            result.append(0)
        
        for i in range(n):
            length = right[i] - left[i] - 1
            result[length] = max(result[length], arr[i])
        
        for i in range(n - 1, 0, -1):
            result[i] = max(result[i], result[i + 1])
        
        return result[1:]
