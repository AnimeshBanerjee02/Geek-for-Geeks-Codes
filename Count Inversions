class Solution:
    def inversionCount(self, arr):
        def merge_sort(arr):
            if len(arr) <=1:
                return arr,0
            
            mid = len(arr) // 2
            left,li = merge_sort(arr[:mid])
            right,ri = merge_sort(arr[mid:])
            merged = []
            i = j = 0
            res = 0
            while i < len(left) and j < len(right):
                if left[i] <= right[j]:
                    merged.append(left[i])
                    i += 1
                else:
                    merged.append(right[j])
                    res+=(len(left)-i)
                    j += 1
            merged.extend(left[i:])
            merged.extend(right[j:])
            res = li+ri+res
            return merged,res
        x,y = merge_sort(arr)
        return y
